<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: gitstatusd Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 247)">
<title>gitstatusd</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-247 959.5,-247 959.5,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="#000000" points="8,-103 8,-235 438,-235 438,-103 8,-103"/>
</g>
<!-- File: gitstatusd -->
<g id="node1" class="node">
<title>File: gitstatusd</title>
<g id="a_node1"><a xlink:title="gitstatusd">
<polygon fill="#f8f8f8" stroke="#000000" points="429.5,-227 16.5,-227 16.5,-111 429.5,-111 429.5,-227"/>
<text text-anchor="start" x="24.5" y="-210.2" font-family="Times,serif" font-size="16.00" fill="#000000">File: gitstatusd</text>
<text text-anchor="start" x="24.5" y="-192.2" font-family="Times,serif" font-size="16.00" fill="#000000">Type: cpu</text>
<text text-anchor="start" x="24.5" y="-174.2" font-family="Times,serif" font-size="16.00" fill="#000000">Active filters:</text>
<text text-anchor="start" x="24.5" y="-156.2" font-family="Times,serif" font-size="16.00" fill="#000000"> &#160;&#160;show_from=ScanDirs</text>
<text text-anchor="start" x="24.5" y="-138.2" font-family="Times,serif" font-size="16.00" fill="#000000">Showing nodes accounting for 61.60s, 99.40% of 61.97s total</text>
<text text-anchor="start" x="24.5" y="-120.2" font-family="Times,serif" font-size="16.00" fill="#000000">Dropped 6 nodes (cum &lt;= 0.31s)</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs (61.96s)">
<polygon fill="#edd5d5" stroke="#b20000" points="596.5,-208 447.5,-208 447.5,-130 596.5,-130 596.5,-208"/>
<text text-anchor="middle" x="522" y="-193.6" font-family="Times,serif" font-size="13.00" fill="#000000">gitstatus</text>
<text text-anchor="middle" x="522" y="-179.6" font-family="Times,serif" font-size="13.00" fill="#000000">(anonymous namespace)</text>
<text text-anchor="middle" x="522" y="-165.6" font-family="Times,serif" font-size="13.00" fill="#000000">ScanDirs</text>
<text text-anchor="middle" x="522" y="-151.6" font-family="Times,serif" font-size="13.00" fill="#000000">3.51s (5.66%)</text>
<text text-anchor="middle" x="522" y="-137.6" font-family="Times,serif" font-size="13.00" fill="#000000">of 61.96s (100%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="__GI___fxstatat (48.82s)">
<polygon fill="#edd7d5" stroke="#b20c00" points="610,-60 434,-60 434,0 610,0 610,-60"/>
<text text-anchor="middle" x="522" y="-36.8" font-family="Times,serif" font-size="24.00" fill="#000000">__GI___fxstatat</text>
<text text-anchor="middle" x="522" y="-10.8" font-family="Times,serif" font-size="24.00" fill="#000000">48.82s (78.78%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N2 -->
<g id="edge1" class="edge">
<title>N1&#45;&gt;N2</title>
<g id="a_edge1"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __GI___fxstatat (48.82s)">
<path fill="none" stroke="#b20c00" stroke-width="4" d="M522,-129.9108C522,-111.3469 522,-89.1771 522,-70.4428"/>
<polygon fill="#b20c00" stroke="#b20c00" stroke-width="4" points="525.5001,-70.4329 522,-60.433 518.5001,-70.433 525.5001,-70.4329"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __GI___fxstatat (48.82s)">
<text text-anchor="middle" x="542" y="-81.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 48.82s</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="__libc_openat64 (5.76s)">
<polygon fill="#ede7e2" stroke="#b2895f" points="738,-56.5 628,-56.5 628,-3.5 738,-3.5 738,-56.5"/>
<text text-anchor="middle" x="683" y="-41.3" font-family="Times,serif" font-size="14.00" fill="#000000">__libc_openat64</text>
<text text-anchor="middle" x="683" y="-26.3" font-family="Times,serif" font-size="14.00" fill="#000000">5.72s (9.23%)</text>
<text text-anchor="middle" x="683" y="-11.3" font-family="Times,serif" font-size="14.00" fill="#000000">of 5.76s (9.29%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N3 -->
<g id="edge2" class="edge">
<title>N1&#45;&gt;N3</title>
<g id="a_edge2"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __libc_openat64 (5.76s)">
<path fill="none" stroke="#b2895f" d="M567.2759,-129.9108C591.6758,-108.8451 621.4538,-83.1361 644.6925,-63.0729"/>
<polygon fill="#b2895f" stroke="#b2895f" points="647.0235,-65.6845 652.3055,-56.5002 642.449,-60.3859 647.0235,-65.6845"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __libc_openat64 (5.76s)">
<text text-anchor="middle" x="644" y="-81.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 5.76s</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="__libc_close (1.88s)">
<polygon fill="#edebe9" stroke="#b2a997" points="852,-53.5 756,-53.5 756,-6.5 852,-6.5 852,-53.5"/>
<text text-anchor="middle" x="804" y="-39.9" font-family="Times,serif" font-size="12.00" fill="#000000">__libc_close</text>
<text text-anchor="middle" x="804" y="-26.9" font-family="Times,serif" font-size="12.00" fill="#000000">1.81s (2.92%)</text>
<text text-anchor="middle" x="804" y="-13.9" font-family="Times,serif" font-size="12.00" fill="#000000">of 1.88s (3.03%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N4 -->
<g id="edge3" class="edge">
<title>N1&#45;&gt;N4</title>
<g id="a_edge3"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __libc_close (1.88s)">
<path fill="none" stroke="#b2a997" d="M596.5386,-133.6577C640.5015,-112.622 697.1203,-85.1994 747,-60 748.151,-59.4185 749.3139,-58.8286 750.4854,-58.2321"/>
<polygon fill="#b2a997" stroke="#b2a997" points="752.2805,-61.2448 759.5773,-53.5632 749.0828,-55.0179 752.2805,-61.2448"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __libc_close (1.88s)">
<text text-anchor="middle" x="727" y="-81.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.88s</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="__GI___fxstat (1.74s)">
<polygon fill="#edece9" stroke="#b2a999" points="955.5,-48 870.5,-48 870.5,-12 955.5,-12 955.5,-48"/>
<text text-anchor="middle" x="913" y="-33.4" font-family="Times,serif" font-size="12.00" fill="#000000">__GI___fxstat</text>
<text text-anchor="middle" x="913" y="-20.4" font-family="Times,serif" font-size="12.00" fill="#000000">1.74s (2.81%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N5 -->
<g id="edge4" class="edge">
<title>N1&#45;&gt;N5</title>
<g id="a_edge4"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __GI___fxstat (1.74s)">
<path fill="none" stroke="#b2a999" d="M596.7448,-149.8943C666.5751,-130.9025 772.9711,-99.0146 861,-60 865.7032,-57.9155 870.5259,-55.5196 875.2472,-53.0098"/>
<polygon fill="#b2a999" stroke="#b2a999" points="877.0828,-55.9943 884.1433,-48.095 873.6978,-49.8672 877.0828,-55.9943"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="gitstatus::(anonymous namespace)::ScanDirs &#45;&gt; __GI___fxstat (1.74s)">
<text text-anchor="middle" x="833" y="-81.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.74s</text>
</a>
</g>
</g>
</g>
</g></svg>
